高级投票卡片重复显示问题修复
时间：2025年6月17日 16:30

## 问题描述
用户反馈：无论是创建高级投票，还是在投票概览页面中，都只会显示复数个第一张卡的信息。
例如如果高级投票中有2张卡，则会显示2个第一张卡的信息。

## 问题分析
经过分析，问题可能出现在以下几个环节：
1. 卡片ID解析过程中出现重复
2. getCardsByIds方法的实现有问题
3. CardParser的getCardById方法可能有缓存问题
4. 数据传递过程中出现问题

## 修复方案

### 1. 强化getCardsByIds方法
在Card模型的getCardsByIds方法中添加了更严格的验证和去重逻辑：
- 确保输入是数组并去重
- 验证每个卡片ID是有效的整数
- 确保返回的卡片信息中ID字段正确

### 2. 添加调试信息
在关键位置添加调试信息，帮助诊断问题：
- 高级投票确认页面：记录输入的卡片ID和查询结果
- 高级投票详情页面：记录JSON解析和卡片查询过程

### 3. 数据验证增强
- 在parseCardIds方法中已有去重逻辑（array_unique）
- 在getCardsByIds方法中再次确保去重
- 验证卡片ID的有效性

## 修改文件

### includes/Models/Card.php
```php
public function getCardsByIds($cardIds) {
    if (empty($cardIds)) {
        return [];
    }

    // 确保输入是数组并去重
    if (!is_array($cardIds)) {
        $cardIds = [$cardIds];
    }
    
    $cardIds = array_unique($cardIds);
    $cards = [];
    
    // 为每个卡片ID单独查询，确保不会出现重复
    foreach ($cardIds as $cardId) {
        // 确保卡片ID是整数
        $cardId = (int)$cardId;
        if ($cardId <= 0) {
            continue;
        }
        
        $card = $this->getCardById($cardId);
        if ($card) {
            // 确保卡片ID正确
            $card['id'] = $cardId;
            $cards[] = $card;
        }
    }

    return $cards;
}
```

### includes/Controllers/VoteController.php
- 在高级投票确认页面添加调试信息
- 在高级投票详情页面添加调试信息
- 记录卡片ID解析和查询过程

## 可能的根本原因

### 1. CardParser缓存问题
CardParser使用单例模式和数据库连接缓存，可能在某些情况下返回缓存的结果。

### 2. 数据库查询问题
getCardById方法在找到第一张卡片后立即返回，但可能存在查询逻辑问题。

### 3. JSON解析问题
高级投票的card_ids字段存储JSON格式，解析过程可能出现问题。

### 4. 视图渲染问题
虽然不太可能，但视图文件中的循环可能存在问题。

## 测试验证

### 测试步骤
1. 创建包含多张不同卡片的高级投票
2. 检查确认页面是否显示正确的卡片信息
3. 提交投票后检查详情页面
4. 验证每张卡片的信息是否正确

### 预期结果
- 确认页面显示所有不同的卡片
- 详情页面显示所有不同的卡片
- 每张卡片的ID、名称、类型等信息正确
- 不会出现重复的卡片信息

## 调试信息

### 启用调试
修复版本在关键位置添加了调试信息，当DEBUG_MODE为true时会输出：
- 输入的卡片ID列表
- 查询到的卡片数量
- 实际的卡片ID和名称列表

### 调试日志位置
调试信息会输出到PHP错误日志或通过Utils::debug方法记录。

## 后续监控

### 1. 用户反馈
关注用户是否还会遇到卡片重复显示的问题。

### 2. 性能监控
监控getCardsByIds方法的性能，确保批量查询不会影响系统性能。

### 3. 数据完整性
定期检查高级投票的card_ids字段数据是否正确。

## 注意事项

### 1. 调试信息
生产环境中应关闭DEBUG_MODE以避免输出过多调试信息。

### 2. 性能影响
修复后的getCardsByIds方法会对每个卡片ID进行单独验证，可能略微影响性能。

### 3. 向后兼容
所有修改都保持向后兼容，不会影响现有功能。

## 如果问题仍然存在

### 进一步调试
1. 检查CardParser的getCardById方法是否有缓存问题
2. 验证数据库连接和查询是否正确
3. 检查JSON编码/解码过程
4. 分析具体的卡片ID和数据库内容

### 临时解决方案
如果问题仍然存在，可以考虑：
1. 清除CardParser的数据库连接缓存
2. 使用不同的查询方法
3. 在视图层进行额外的去重处理
