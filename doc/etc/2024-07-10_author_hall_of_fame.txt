# 2024-07-10 作者光荣榜功能实现

## 概述

本文档记录了作者光荣榜功能的实现过程。主要包括以下内容：

1. 在配置文件中添加作者光荣榜相关配置项
2. 创建作者统计模型，用于计算作者统计数据
3. 创建作者控制器，处理作者光荣榜相关请求
4. 创建作者光荣榜页面视图
5. 更新导航栏，添加作者光荣榜入口
6. 更新路由，支持作者光荣榜相关请求
7. 添加作者光荣榜相关样式

## 一、功能需求

作者光荣榜功能需要实现以下内容：

1. 只有在配置中打开该功能后，该功能才将显示在导航栏上
2. 全部用户都可点击进入查看榜单
3. 管理员组1以上的成员可以在该页面上点击"更新榜单"按钮
4. 根据string.conf与lflist.conf的内容，生成包含以下内容的表单：
   - 作者投稿卡片数量：根据string.conf中#注释行的作者信息与卡片ID区间信息，计算该作者在no81.cdb和no42.cdb中的卡片之和
   - 作者标准环境被禁卡数量：读取lflist.conf中标准环境下该作者名下卡片被禁止（0）的卡片数量，并减去在no42.cdb中的卡片数量
   - 作者标准环境被禁卡百分比：将被禁卡数量除以投稿卡片数量，以百分比显示，如果该百分比大于17%，则在榜单中强调显示
   - 作者标准环境系列禁止数量：计算每个作者是否有整个系列在标准环境中被禁止的情况
5. 按照被禁卡百分比，从高到低列出全部的作者信息
6. 显示榜单生成时间

## 二、实现内容

### 1. 配置文件更新

在config.php中添加作者光荣榜相关配置项：

```php
// 作者光荣榜配置
define('AUTHOR_HALL_OF_FAME_ENABLED', true); // 是否启用作者光荣榜功能
define('AUTHOR_HALL_OF_FAME_HIGHLIGHT_THRESHOLD', 17); // 禁卡比例高亮阈值（百分比）
```

### 2. 作者统计模型

创建AuthorStats.php模型，实现以下功能：

1. 获取作者统计数据
   - 遍历所有卡片数据库文件
   - 统计每个作者的卡片数量
   - 计算每个作者的被禁卡数量
   - 计算被禁卡百分比
   - 计算被禁系列数量
   - 按被禁卡百分比从高到低排序

2. 更新作者光荣榜
   - 获取最新的作者统计数据
   - 记录更新时间

### 3. 作者控制器

创建AuthorController.php控制器，实现以下功能：

1. 作者光荣榜首页
   - 检查功能是否启用
   - 获取作者统计数据
   - 渲染作者光荣榜页面

2. 更新作者光荣榜
   - 检查功能是否启用
   - 要求管理员权限
   - 更新作者光荣榜
   - 重定向到作者光荣榜页面

### 4. 作者光荣榜页面视图

创建includes/Views/authors/index.php视图，实现以下功能：

1. 显示作者光荣榜标题和生成时间
2. 对于管理员，显示更新榜单按钮
3. 以表格形式显示作者统计数据
   - 排名
   - 作者名称
   - 投稿卡片数量
   - 标准环境被禁卡数量
   - 标准环境被禁卡百分比
   - 标准环境系列禁止数量
4. 对于被禁卡百分比超过阈值的作者，使用特殊样式强调显示

### 5. 导航栏更新

更新includes/Views/layout.php，在导航栏中添加作者光荣榜入口：

```php
<?php if (defined('AUTHOR_HALL_OF_FAME_ENABLED') && AUTHOR_HALL_OF_FAME_ENABLED): ?>
    <li><a href="<?php echo BASE_URL; ?>?controller=author">作者光荣榜</a></li>
<?php endif; ?>
```

### 6. 路由更新

更新index.php，添加作者控制器映射：

```php
$controllerMap = [
    'card' => 'CardController',
    'vote' => 'VoteController',
    'admin' => 'AdminController',
    'banlist' => 'BanlistController',
    'author' => 'AuthorController'
];
```

### 7. 样式更新

在assets/css/style.css中添加作者光荣榜相关样式：

```css
/* 作者光荣榜样式 */
.table-responsive {
    overflow-x: auto;
}

.table-striped tbody tr:nth-of-type(odd) {
    background-color: rgba(0, 0, 0, 0.05);
}

.table-hover tbody tr:hover {
    background-color: rgba(0, 0, 0, 0.075);
}

.table-danger {
    background-color: #f8d7da;
}

.table-danger:hover {
    background-color: #f5c6cb;
}
```

## 三、技术说明

### 1. 作者信息获取

作者信息有两种来源：
1. 在strings.conf文件中以#开头的注释行中，格式为：`#作者名 卡片ID前缀 系列区间`
2. 在卡片描述中，格式为：`DoItYourself/DIY by 作者名`

如果同时满足两种条件，则第二种条件（卡片描述中的签名）优先。

### 2. 禁卡信息获取

禁卡信息从lflist.conf文件中获取，格式为：`卡片ID 状态 --注释`
状态为0表示禁止，1表示限制，2表示准限制。

### 3. 系列禁止判断

判断一个系列是否被禁止的逻辑：
1. 获取该作者的所有卡片
2. 按系列分组
3. 检查每个系列中的所有卡片是否都在标准环境中被禁止
4. 如果是，则该系列被禁止

## 四、后续优化方向

1. 添加缓存机制，避免每次访问都重新计算作者统计数据
2. 添加更详细的作者信息页面，显示作者的所有卡片和被禁卡
3. 添加作者排行榜历史记录，记录每次更新的结果
4. 添加更多的统计指标，如作者的限制卡数量、准限制卡数量等
