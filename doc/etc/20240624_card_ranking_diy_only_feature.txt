# 卡片排行榜"只看DIY卡排名"功能

## 需求描述
在卡片排行榜界面上添加一个"只看DIY卡排名"的选项，用户选择该选项后，从榜单中排除全部TCG卡片（即只能在TCG_CARD_DATA_PATH中找到的卡片）。

## 实现方案
1. 修改 CardRankingController.php，添加"只看DIY卡排名"的选项
2. 修改 CardRanking.php 核心类，实现过滤 TCG 卡片的功能
3. 更新 card_ranking/index.php 视图，添加"只看DIY卡排名"的选项
4. 在详细统计表格中添加标识 TCG 卡片的列

## 修改内容

### 1. 修改 CardRankingController.php
在 `includes\Controllers\CardRankingController.php` 文件中，修改 index 方法，添加 diyOnly 参数：

```php
// 获取请求参数
$timeRange = isset($_GET['time_range']) ? $_GET['time_range'] : 'week';
$limit = isset($_GET['limit']) ? (int)$_GET['limit'] : 10;
$detailLimit = isset($_GET['detail_limit']) ? (int)$_GET['detail_limit'] : 10;
$diyOnly = isset($_GET['diy_only']) ? (bool)$_GET['diy_only'] : false;

// ...

// 获取卡片排行榜数据
$rankingData = $this->cardRankingModel->getCardRanking($timeRange, $limit, false, $diyOnly);
```

### 2. 修改 CardRanking 模型类
在 `includes\Models\CardRanking.php` 文件中，修改 getCardRanking 方法，添加 diyOnly 参数：

```php
/**
 * 获取卡片排行榜
 *
 * @param string $timeRange 时间范围 (week, two_weeks, month, all)
 * @param int $limit 显示数量限制
 * @param bool $forceUpdate 是否强制更新
 * @param bool $diyOnly 是否只显示DIY卡片
 * @return array 卡片排行榜数据
 */
public function getCardRanking($timeRange = 'week', $limit = 10, $forceUpdate = false, $diyOnly = false) {
    return $this->cardRankingCore->getCardRanking($timeRange, $limit, $forceUpdate, $diyOnly);
}
```

### 3. 修改 CardRanking 核心类
在 `includes\Core\CardRanking.php` 文件中，进行以下修改：

#### 3.1 修改 getCardRanking 方法，添加 diyOnly 参数：

```php
/**
 * 获取卡片排行榜
 *
 * @param string $timeRange 时间范围 (week, two_weeks, month, all)
 * @param int $limit 显示数量限制
 * @param bool $forceUpdate 是否强制更新
 * @param bool $diyOnly 是否只显示DIY卡片
 * @return array 卡片排行榜数据
 */
public function getCardRanking($timeRange = 'week', $limit = 10, $forceUpdate = false, $diyOnly = false) {
    // 检查缓存
    $cacheFile = $this->getCacheFilePath($timeRange, $diyOnly);
    
    // ...
    
    // 获取卡片详细信息并排序
    $rankingData = $this->processRankingData($cardUsage, $limit, $diyOnly);
    
    // 缓存数据
    $this->cacheRankingData($rankingData, $timeRange, $diyOnly);
    
    return $rankingData;
}
```

#### 3.2 修改 processRankingData 方法，实现过滤 TCG 卡片的功能：

```php
/**
 * 处理排行榜数据
 *
 * @param array $cardUsage 卡片使用统计
 * @param int $limit 显示数量限制
 * @param bool $diyOnly 是否只显示DIY卡片
 * @return array 处理后的排行榜数据
 */
private function processRankingData($cardUsage, $limit, $diyOnly = false) {
    $rankingData = [
        'top_cards' => [],
        'all_cards' => [],
        'total_decks' => count($cardUsage) > 0 ? max(array_column($cardUsage, 'total_decks')) : 0,
        'generated_time' => date('Y-m-d H:i:s'),
        'diy_only' => $diyOnly
    ];
    
    // 处理每张卡的详细信息
    foreach ($cardUsage as $cardId => $usage) {
        // 先从DIY卡数据库中查找
        $cardInfo = $this->cardParser->getCardById($cardId);
        $isTcgCard = false;
        
        // 如果在DIY卡数据库中找不到，则从TCG卡数据库中查找
        if (!$cardInfo && defined('TCG_CARD_DATA_PATH') && file_exists(TCG_CARD_DATA_PATH)) {
            $cardInfo = $this->getTcgCardInfo($cardId);
            if ($cardInfo) {
                $isTcgCard = true;
            }
        }
        
        // 如果找不到卡片信息，则跳过
        if (!$cardInfo) {
            continue;
        }
        
        // 如果只显示DIY卡片且当前卡片是TCG卡片，则跳过
        if ($diyOnly && $isTcgCard) {
            continue;
        }
        
        // 构建卡片数据
        $cardData = [
            // ...
            'is_tcg' => $isTcgCard
        ];
        
        $rankingData['all_cards'][] = $cardData;
    }
    
    // ...
    
    return $rankingData;
}
```

#### 3.3 修改 getCacheFilePath 和 cacheRankingData 方法，添加 diyOnly 参数：

```php
/**
 * 获取缓存文件路径
 *
 * @param string $timeRange 时间范围
 * @param bool $diyOnly 是否只显示DIY卡片
 * @return string 缓存文件路径
 */
private function getCacheFilePath($timeRange, $diyOnly = false) {
    $suffix = $diyOnly ? '_diy_only' : '';
    return $this->cacheDir . '/card_ranking_' . $timeRange . $suffix . '.json';
}

/**
 * 缓存排行榜数据
 *
 * @param array $rankingData 排行榜数据
 * @param string $timeRange 时间范围
 * @param bool $diyOnly 是否只显示DIY卡片
 */
private function cacheRankingData($rankingData, $timeRange, $diyOnly = false) {
    $cacheFile = $this->getCacheFilePath($timeRange, $diyOnly);
    file_put_contents($cacheFile, json_encode($rankingData, JSON_UNESCAPED_UNICODE));
}
```

### 4. 更新 card_ranking/index.php 视图
在 `includes\Views\card_ranking\index.php` 文件中，添加"只看DIY卡排名"的选项：

```php
<div class="form-group ml-3">
    <div class="checkbox">
        <label>
            <input type="checkbox" name="diy_only" value="1" <?php echo $diyOnly ? 'checked' : ''; ?> onchange="this.form.submit()">
            只看DIY卡排名
        </label>
    </div>
</div>
```

在详细统计表格中添加标识 TCG 卡片的列：

```php
<th>使用率</th>
<?php if (!$diyOnly): ?>
<th>卡片类型</th>
<?php endif; ?>
```

在表格行中添加 TCG 卡片的标识：

```php
<td><?php echo $card['usage_rate']; ?>%</td>
<?php if (!$diyOnly): ?>
<td><?php echo isset($card['is_tcg']) && $card['is_tcg'] ? 'TCG卡' : 'DIY卡'; ?></td>
<?php endif; ?>
```

## 效果说明
1. 在卡片排行榜界面上添加了"只看DIY卡排名"的复选框
2. 当用户选择该选项后，系统会从榜单中排除全部TCG卡片
3. 在不选择"只看DIY卡排名"时，系统会在详细统计表格中显示一个额外的列，标识每张卡片是TCG卡还是DIY卡
4. 系统会根据不同的选项生成不同的缓存文件，提高性能

## 修改时间
2024年6月24日
